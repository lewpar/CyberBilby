---
import { getCollection } from "astro:content";
import { toTitleCase } from "../libs/lib";
import ProfileImage from "./ProfileImage.astro";
import Author from "./Author.astro";

interface Props {
    max: number;
}

const { max } = Astro.props;

const posts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
).filter(p => p.data.hidden !== true).slice(0, max);

const authors = await getCollection('authors');
---

<style>
    .recent-posts-title {
        font-size: 2rem;
    }
    .recent-posts {
        display: flex;
        flex-direction: column;

        gap: 0.5rem;
    }
    .recent-posts .post {
        display: flex;
        flex-direction: row;

        gap: 0.5rem;

        color: black;
        background-color: white;
        
        text-decoration: none;

        border: 1px solid rgb(220, 220, 220);
        border-radius: 5px;

        padding: 0.5rem;

        transition: color 0.25s;
    }
    .recent-posts .post:hover {
        color: dodgerblue;
    }

    .recent-posts .post .image {
        flex: 1;

        object-fit: cover;
    }
    .recent-posts .post .image img {
        width: 100%;
        height: 100%;

        object-fit: cover;
    }

    .recent-posts .post .details {
        flex: 2;

        display: flex;
        flex-direction: column;

        padding: 0.5rem;

        line-height: 1rem;
    }
    .recent-posts .post .details .title {
        font-size: 1.25rem;
    }
    .recent-posts .post .details .category {
        font-size: 1rem;
        color: gray;
    }
    .recent-posts .post .details .summary {
        font-size: 1rem;
    }

    .recent-posts .post .details .author {
        display: flex;
        flex-direction: row;

        align-items: center;
    }

    .recent-posts .post .details .author img {
        max-width: 40px;
        max-height: 40px;
    }

    .recent-posts .post .details .author .details {
        display: flex;
        flex-direction: column;
    }

    .recent-posts .post .details .author .name {
        font-size: 1rem;
    }

    .recent-posts .post .details .author .date {
        font-size: 0.75rem;
    }

    .all-posts {
        padding: 0.5rem;

        text-decoration: none;

        color: white;
        background-color: dodgerblue;

        border-radius: 5px;

        text-align: center;

        transition: filter 0.25s;
    }
    .all-posts:hover {
        filter: brightness(125%);
    }

    .author-others {
        font-size: 0.75rem;
    }

    @media (max-width: 720px) {
        .recent-posts .post {
            flex-direction: column;
        }
        .recent-posts .post .image {
            width: 100%;
            max-width: 100%;
            max-height: 100px;
        }
    }
</style>

<div>
    <h2 class="recent-posts-title">Recent Posts</h2>
    <div class="recent-posts">
        {
            posts.map(post => {
                let author = authors.find(a => a.id == post.data.contributors[0]);
                if(author === undefined) {
                    author = authors.find(a => a.id === "anonymous");
                }
    
                return <a href={`/blog/${post.slug}`} class="post">
                        <div class="image">
                            <img src={post.data.heroImage} alt={post.data.title} />
                        </div>
    
                        <div class="details">
                            <h2 class="title">{post.data.title}</h2>
                            <div class="category">{toTitleCase(post.data.category)}</div>
                            <p class="summary">{post.data.summary}</p>
                            <div class="author">
                                <Author id={author!.id} name={author!.data.name} date={post.data.pubDate}></Author>
                                {
                                    (post.data.contributors.length > 1) &&
                                    <span class="author-others">+ {post.data.contributors.length - 1} other(s)</span>
                                }
                            </div>
                        </div>
                    </a>
            })
        }
        <a href="/blog" class="all-posts">All Posts</a>
    </div>
</div>
